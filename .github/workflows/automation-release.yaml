name: Conditionally Release the SDK
on:
  pull_request:
    types: ['closed']

concurrency:
  group: 'release-${{ github.head_ref }}'
  cancel-in-progress: true

jobs:
  release-go-sdk:
    if: ${{ github.event.pull_request.merged == true && contains( github.event.pull_request.labels.*.name, 'release-once-merged') }}
    runs-on: custom-linux-medium
    permissions:
      contents: write
    outputs:
      latest_tag: ${{ steps.results.outputs.latest_tag }}
      should_update_azurerm: ${{ steps.results.outputs.should_update_azurerm }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: run the unit tests
        run: |
          make tools
          make test

      - name: "determine and publish the Git Tag"
        run: |
          ./scripts/determine-and-publish-git-tag.sh

      - id: results
        name: "collecting outputs"
        run: |
          latestTag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "latest_tag=$latestTag" >> "$GITHUB_OUTPUT"
          echo "should_update_azurerm=${{ github.event.pull_request.merged == true && contains( github.event.pull_request.labels.*.name, 'update-azurerm-after-release') }}" >> "$GITHUB_OUTPUT"
        shell: bash

  conditionally-update-azurerm:
    needs: [release-go-sdk]
    if: ${{github.event.pull_request.merged == true && contains( github.event.pull_request.labels.*.name, 'update-azurerm-after-release') }}
    runs-on: custom-linux-xl
    outputs:
      description: ${{ steps.update-azurerm-provider.outputs.description }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: ./.go-version

      - name: "Launch SSH Agent"
        run: |
          # launch an ssh agent and export it's env vars
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        env:
          SSH_AUTH_SOCK: /tmp/azurerm_ssh_agent.sock

      - name: "Load SSH Key"
        run: |
          # load the Deployment Write Key for the AzureRM repository
          echo "${{ secrets.AZURERM_DEPLOYMENT_WRITE_KEY }}" | ssh-add -
        env:
          SSH_AUTH_SOCK: /tmp/azurerm_ssh_agent.sock

      - id: update-azurerm-provider
        name: "Update then push the AzureRM Provider"
        run: |
          ./scripts/update-azurerm-provider.sh ${{ needs.release-go-sdk.outputs.latest_tag }}
          echo 'description=<<EOF' >> $GITHUB_OUTPUT
          echo "$(base64 -i ./tmp/pr-description.txt)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
        shell: bash
        env:
          GIT_COMMIT_USERNAME: "hc-github-team-tf-azure"
          RUNNING_IN_AUTOMATION: "yep"
          SSH_AUTH_SOCK: /tmp/azurerm_ssh_agent.sock

      - name: "Remove the Key from the SSH Agent"
        if: always()
        run: |
          # remove the ssh key
          ssh-add -D
        env:
          SSH_AUTH_SOCK: /tmp/azurerm_ssh_agent.sock

      - name: "Terminate the SSH Agent"
        if: always()
        run: |
          pkill -9 ssh-agent

  conditionally-comment-on-azurerm:
    needs: [conditionally-update-azurerm, release-go-sdk]
    runs-on: custom-linux-medium
    steps:
      - name: Comment on the PR with the PR description
        run: |
          echo "Sleeping 60s to give Github time to create the PR.."
          sleep 60
          echo "Outputting PR Description to a file.."
          echo "${{ needs.update-azurerm-provider.outputs.description }}" > pr-description-base64.txt
          echo "Base64-decoding the PR Description.."
          base64 -i pr-description-base64.txt -o pr-description.txt 
          echo "Finding the PR number.."
          pr_number=gh pr list --repo="hashicorp/terraform-provider-azurerm" --search "author:hc-github-team-tf-azure sort:created-desc is:pr is:open" --json "headRefName,number" | jq '.[] | select(.headRefName=="${BRANCH_NAME}") | .number'
          echo "Commenting on the PR"
          gh issue comment $pr_number --repo "hashicorp/terraform-provider-azurerm" --body-file pr-description.txt"
        shell: bash
        env:
          BRANCH_NAME: "auto-pr/deps/updating-go-azure-sdk-to-${{ needs.release-go-sdk.outputs.latest_tag }}"
          GITHUB_TOKEN: "${{ secrets.AZURERM_COMMENT_KEY }}"
